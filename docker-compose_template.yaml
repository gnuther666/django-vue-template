
services:
  backend:
    build: 
      context: .
      dockerfile: ./META/backend/Dockerfile
    container_name: backend
    volumes:
      - ./src/backend:/backend
      - ${BACKEND_DATA_PATH}:${BACKEND_INNER_PATH}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - db
    command: python3 setup.py
    env_file:
      - .env
    networks:
      template_network:
        ipv4_address: ${BACKEND_IP}


  db:
    image: mysql:8.0
    restart: always
    container_name: db
    volumes:
      - ${DB_DATA_PATH}:/var/lib/mysql
      - ./META/DB/my.cnf:/etc/my.cnf
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    networks:
      template_network:
        ipv4_address: ${DB_IP}
      
  redis:
    build:
      context: .
      dockerfile: ./META/redis/Dockerfile
    restart: always
    privileged: true
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./META/redis/redis.conf:/etc/redis/redis.conf:ro
      - ${REDIS_DATA_PATH}/redis/data:/data
      - ${REDIS_DATA_PATH}/redis/logs:/logs
    container_name: redis
    command: redis-server /etc/redis/redis.conf
    env_file:
      ./.env
    networks:
      template_network:
        ipv4_address: ${REDIS_IP}
#PROD  web:
#PROD    image: nginx:1.25.2
#PROD    container_name: nginx
#PROD    ports:
#PROD      - "80:80"
#PROD      - "443:443"
#PROD    privileged: true
#PROD    volumes:
#PROD      - ./META/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#PROD      # - ./META/nginx/hosts:/etc/hosts:ro
#PROD      # - ./META/nginx/user_web:/user/web:ro
#PROD      - ${HTML_ROOT}:/www:ro
#PROD      # - ${IOT_DATA_PATH}/nginx:/var/log/nginx
#PROD      # - /etc/letsencrypt/archive/manager.woozatop.com/fullchain2.pem:/ssl_pem/server.crt:ro
#PROD      # - /etc/letsencrypt/archive/manager.woozatop.com/privkey2.pem:/ssl_pem/server.key:ro
#PROD    env_file:
#PROD      ./.env
#PROD    networks:
#PROD      template_network:
#PROD        ipv4_address: ${NGINX_IP}

networks:
  template_network:
    driver: bridge
    ipam:
      config:
        - subnet: ${BASE_IP}.0.0.0/16